% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/planRoute.R
\name{planRoute}
\alias{planRoute}
\title{Create a flight plan route between two airports.}
\usage{
planRoute(aptFrom, aptTo, fixFrom = NA, fixTo = NA, fixes = character(),
  limitArc = TRUE, narrowArc = FALSE)
}
\arguments{
\item{aptFrom}{Departure airport (4-letter ICAO code).}

\item{aptTo}{Destination airport (4-letter ICAO code).}

\item{fixFrom}{Initial departure navfix (after SID procedure). If not supplied manually, the navfix nearest to the departure airport will be chosen automatically, using \code{\link{getAptFix}}.}

\item{fixTo}{Final destination navfix (before STAR procedure). If not supplied manually, the navfix nearest to the destination airport will be chosen automatically, using \code{\link{getAptFix}}}

\item{fixes}{Optional vector of intermediate navfixes. Use these to speed up the algorithm,
or to manually adjust the desired route. If \code{NA}s are inserted between two navfixes,
then the route is flown straight between them, without following ICAO runways.}

\item{limitArc}{If TRUE, only search points at an angle of ±90 degrees towards the destination point in order to speed up the algorithm.}

\item{narrowArc}{If TRUE (and also limitArc==TRUE), search at a narrower angle of ±45 degrees towards the destination point.}
}
\value{
Returns a flight plan stored on a data.frame with the following columns:
\describe{
 \item{fix}{The name each point (airport/navaid/navfix) in the flight plan.}
 \item{fixLat}{Latitude of the point.}
 \item{fixLon}{Longitude of the point.}
 \item{fullName}{Full name }
 \item{freq}{Radio frequency (for navaids only).}
 \item{range}{Reception range (for navaids only).}
 \item{elevation}{Elevation (for navaids or airports).}
 \item{dev}{Deviation (for VOR stations).}
 \item{magdecl}{Magnetic declination at the point.}
 \item{dist}{Distance (in km, up to the next point in the plan).}
 \item{course}{Course (true) towards the next point.}
 \item{magcourse}{Course (magnetic) towards the next point.}
 \item{awy}{Airway identifier for the following segment (up to the next point in the plan), or SID/STAR.}
 \item{baseFL}{Base flight level for the following segment (up to the next point in the plan).}
 \item{topFL}{Top flight level for the following segment (up to the next point in the plan).}
 \item{altawy}{Alternative airway for the following segment, along with its permitted flight level range.}
}
}
\description{
This function determines the shortest route between two points (navfixes/navaids)
}
\examples{
# Fly from Athens to Thessaloniki
plan1 <- planRoute("LGAV", "LGTS")
print(plan1)

# Manually choose appropriate departure and approach fixes
# (by referring to the relevant approach plates)
plan2 <- planRoute("LGAV", "LGTS", fixFrom="ABLON", fixTo="LEKPO")
print(plan2)

# Fly from Athens to Innsbrück
plan3 <- planRoute("LGAV", "LOWI", "KOR", "BRENO")

# Follow a different route, via Thessaloniki and Belgrade
plan4 <- planRoute("LGAV", "LOWI", "ABLON", "RTT", fixes=c("TSL","ORVAN"))

# Divert a bit from the ICAO airway (OMIRO -> SKP -> BAMOS -> AGISA)
# and fly over PELAS instead, i.e. over Alonissos instead of Skopelos island.
plan5 <- planRoute("LGAV", "LOWI", "ABLON", "RTT",
                   fixes=c("OMIRO", NA, "PELAS", NA, "AGISA", "TSL","ORVAN"))

}
